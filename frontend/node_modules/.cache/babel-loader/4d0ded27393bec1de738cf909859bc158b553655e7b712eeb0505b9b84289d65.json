{"ast":null,"code":"var _jsxFileName = \"/Users/maheshyadav/Desktop/Time_Based_Player/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Clock from './components/Clock';\nimport MusicPlayer from './components/MusicPlayer';\nimport Background from './components/Background';\nimport ConnectionStatus from './components/ConnectionStatus';\nimport AdminPanel from './components/AdminPanel';\nimport { timeBlockAPI, playlistAPI } from './services/api';\nimport { getCurrentTimeBlock } from './utils/timeUtils';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentTimeBlock, setCurrentTimeBlock] = useState(null);\n  const [currentPlaylist, setCurrentPlaylist] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch current time block and playlist\n  const fetchCurrentData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Get current time block from API\n      const timeBlockResponse = await timeBlockAPI.getCurrent();\n      const timeBlock = timeBlockResponse.data;\n      if (timeBlock) {\n        setCurrentTimeBlock(timeBlock);\n\n        // Get playlist for current time block\n        const playlistResponse = await playlistAPI.getById(timeBlock.playlist_id);\n        const playlist = playlistResponse.data;\n        if (playlist) {\n          setCurrentPlaylist(playlist);\n        } else {\n          throw new Error('No playlist found for current time block');\n        }\n      } else {\n        throw new Error('No time block found for current time');\n      }\n    } catch (err) {\n      console.error('Error fetching current data:', err);\n      setError(err.message);\n\n      // Fallback to client-side time detection\n      const fallbackBlock = getCurrentTimeBlock();\n      setCurrentTimeBlock({\n        block_id: fallbackBlock,\n        start_time: '00:00',\n        end_time: '23:59',\n        playlist_id: fallbackBlock,\n        background_image: 'default.jpg'\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle time block change\n  const handleTimeBlockChange = async newBlockId => {\n    try {\n      // Get time block by ID\n      const timeBlockResponse = await timeBlockAPI.getById(newBlockId);\n      const timeBlock = timeBlockResponse.data;\n      if (timeBlock) {\n        setCurrentTimeBlock(timeBlock);\n\n        // Get playlist for new time block\n        const playlistResponse = await playlistAPI.getById(timeBlock.playlist_id);\n        const playlist = playlistResponse.data;\n        if (playlist) {\n          setCurrentPlaylist(playlist);\n          // Auto-play new playlist\n          setIsPlaying(true);\n        }\n      }\n    } catch (err) {\n      console.error('Error handling time block change:', err);\n    }\n  };\n\n  // Handle play/pause\n  const handlePlayPause = playing => {\n    setIsPlaying(playing);\n  };\n\n  // Handle track change\n  const handleTrackChange = newIndex => {\n    // This could be used for analytics or other track change logic\n    console.log('Track changed to index:', newIndex);\n  };\n\n  // Initialize app\n  useEffect(() => {\n    fetchCurrentData();\n  }, []);\n\n  // Show loading state\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading your musical journey...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Show error state\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Oops! Something went wrong\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: fetchCurrentData,\n          className: \"retry-btn\",\n          children: \"Try Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Background, {\n      timeBlock: currentTimeBlock === null || currentTimeBlock === void 0 ? void 0 : currentTimeBlock.block_id,\n      backgroundImage: currentTimeBlock === null || currentTimeBlock === void 0 ? void 0 : currentTimeBlock.background_image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConnectionStatus, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-content\",\n      children: [/*#__PURE__*/_jsxDEV(Clock, {\n        onTimeBlockChange: handleTimeBlockChange,\n        currentTimeBlock: currentTimeBlock === null || currentTimeBlock === void 0 ? void 0 : currentTimeBlock.block_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MusicPlayer, {\n        playlist: currentPlaylist,\n        isPlaying: isPlaying,\n        onPlayPause: handlePlayPause,\n        onNext: handleTrackChange,\n        onPrevious: handleTrackChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"49qwfC8XEVF5F21sKMHHFU0xZ+w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Clock","MusicPlayer","Background","ConnectionStatus","AdminPanel","timeBlockAPI","playlistAPI","getCurrentTimeBlock","jsxDEV","_jsxDEV","App","_s","currentTimeBlock","setCurrentTimeBlock","currentPlaylist","setCurrentPlaylist","isPlaying","setIsPlaying","loading","setLoading","error","setError","fetchCurrentData","timeBlockResponse","getCurrent","timeBlock","data","playlistResponse","getById","playlist_id","playlist","Error","err","console","message","fallbackBlock","block_id","start_time","end_time","background_image","handleTimeBlockChange","newBlockId","handlePlayPause","playing","handleTrackChange","newIndex","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","backgroundImage","onTimeBlockChange","onPlayPause","onNext","onPrevious","_c","$RefreshReg$"],"sources":["/Users/maheshyadav/Desktop/Time_Based_Player/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Clock from './components/Clock';\nimport MusicPlayer from './components/MusicPlayer';\nimport Background from './components/Background';\nimport ConnectionStatus from './components/ConnectionStatus';\nimport AdminPanel from './components/AdminPanel';\nimport { timeBlockAPI, playlistAPI } from './services/api';\nimport { getCurrentTimeBlock } from './utils/timeUtils';\nimport './App.css';\n\nfunction App() {\n  const [currentTimeBlock, setCurrentTimeBlock] = useState(null);\n  const [currentPlaylist, setCurrentPlaylist] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch current time block and playlist\n  const fetchCurrentData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Get current time block from API\n      const timeBlockResponse = await timeBlockAPI.getCurrent();\n      const timeBlock = timeBlockResponse.data;\n\n      if (timeBlock) {\n        setCurrentTimeBlock(timeBlock);\n\n        // Get playlist for current time block\n        const playlistResponse = await playlistAPI.getById(timeBlock.playlist_id);\n        const playlist = playlistResponse.data;\n\n        if (playlist) {\n          setCurrentPlaylist(playlist);\n        } else {\n          throw new Error('No playlist found for current time block');\n        }\n      } else {\n        throw new Error('No time block found for current time');\n      }\n    } catch (err) {\n      console.error('Error fetching current data:', err);\n      setError(err.message);\n      \n      // Fallback to client-side time detection\n      const fallbackBlock = getCurrentTimeBlock();\n      setCurrentTimeBlock({\n        block_id: fallbackBlock,\n        start_time: '00:00',\n        end_time: '23:59',\n        playlist_id: fallbackBlock,\n        background_image: 'default.jpg'\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle time block change\n  const handleTimeBlockChange = async (newBlockId) => {\n    try {\n      // Get time block by ID\n      const timeBlockResponse = await timeBlockAPI.getById(newBlockId);\n      const timeBlock = timeBlockResponse.data;\n\n      if (timeBlock) {\n        setCurrentTimeBlock(timeBlock);\n\n        // Get playlist for new time block\n        const playlistResponse = await playlistAPI.getById(timeBlock.playlist_id);\n        const playlist = playlistResponse.data;\n\n        if (playlist) {\n          setCurrentPlaylist(playlist);\n          // Auto-play new playlist\n          setIsPlaying(true);\n        }\n      }\n    } catch (err) {\n      console.error('Error handling time block change:', err);\n    }\n  };\n\n  // Handle play/pause\n  const handlePlayPause = (playing) => {\n    setIsPlaying(playing);\n  };\n\n  // Handle track change\n  const handleTrackChange = (newIndex) => {\n    // This could be used for analytics or other track change logic\n    console.log('Track changed to index:', newIndex);\n  };\n\n  // Initialize app\n  useEffect(() => {\n    fetchCurrentData();\n  }, []);\n\n  // Show loading state\n  if (loading) {\n    return (\n      <div className=\"app\">\n        <div className=\"loading-container\">\n          <div className=\"loading-spinner\"></div>\n          <p>Loading your musical journey...</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Show error state\n  if (error) {\n    return (\n      <div className=\"app\">\n        <div className=\"error-container\">\n          <h2>Oops! Something went wrong</h2>\n          <p>{error}</p>\n          <button onClick={fetchCurrentData} className=\"retry-btn\">\n            Try Again\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"app\">\n      <Background \n        timeBlock={currentTimeBlock?.block_id} \n        backgroundImage={currentTimeBlock?.background_image}\n      />\n      \n      <ConnectionStatus />\n      \n      <div className=\"app-content\">\n        <Clock \n          onTimeBlockChange={handleTimeBlockChange}\n          currentTimeBlock={currentTimeBlock?.block_id}\n        />\n        \n        <MusicPlayer\n          playlist={currentPlaylist}\n          isPlaying={isPlaying}\n          onPlayPause={handlePlayPause}\n          onNext={handleTrackChange}\n          onPrevious={handleTrackChange}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}